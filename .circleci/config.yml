version: 2.1

executors:
  kubectl-executor:
    docker:
      - image: circleci/python:3.9 
    environment:
      KUBECONFIG: /home/circleci/.kube/config

jobs:
  build-and-push:
    docker:
      - image: circleci/python:3.9 
    steps:
      - checkout

      - run:
          name: Install ODBC Drivers
          command: |
            sudo apt-get update
            sudo apt-get install -y unixodbc-dev g++ 
            sudo apt-get install -y curl apt-transport-https
            curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
            curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
            sudo apt-get update
            sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 
            sudo rm -rf /var/lib/apt/lists/*

      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true


      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r todo-app/requirements.txt

      # Install Azure CLI
      - run:
          name: Install Azure CLI
          command: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Login to Azure using Service Principal
      - run:
          name: Azure CLI Login
          command: |
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      # Login to Azure Container Registry (ACR)
      - run:
          name: Login to ACR
          command: az acr login --name $ACR_NAME

      - run:
          name: Build and Push Docker Image
          command: |
            docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$CIRCLE_SHA1 todo-app/
            docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$CIRCLE_SHA1

      - run:
          name: Save the image tag
          command: |
            echo $CIRCLE_SHA1 > image_tag.txt

      - persist_to_workspace:
          root: .
          paths:
            - image_tag.txt

      - run:
          name: Logout from ACR
          command: |
            docker logout $ACR_NAME.azurecr.io

  # deploy:
  #   executor: kubectl-executor
  #   steps:
  #     - checkout

  #     - attach_workspace:
  #         at: /home/circleci/project
      
  #     - run:
  #         name: Install kubectl
  #         command: |
  #           curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
  #           chmod +x kubectl
  #           sudo mv kubectl /usr/local/bin/

  #     - run:
  #         name: Update Kubernetes manifest with the correct image tag
  #         command: |
  #           IMAGE_TAG=$(cat /home/circleci/project/image_tag.txt)
  #           sed -i "s/latest/$IMAGE_TAG/g" k8s/app.yml

  #     - run:
  #         name: Decode kubeconfig
  #         command: |
  #           mkdir -p ~/.kube/
  #           echo "$KUBECONFIG_CONTENT" | base64 --decode > ~/.kube/config

  #     - run:
  #         name: Deploy to Kubernetes
  #         command: |
  #           kubectl apply -f k8s/

workflows:
  version: 2
  ci_cd_workflow:
    jobs:
      - build-and-push
      # - deploy:
      #     requires:
      #       - build-and-push
